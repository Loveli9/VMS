<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.icss.mvp.dao.index.InTmplDao">
    <resultMap type="com.icss.mvp.entity.index.InTmplIndexEntity" id="inTmplIndex">
        <result property="indexId" column="ID"/>
        <result property="name" column="name"/>
        <result property="unit" column="UNIT"/>
        <result property="upper" column="UPPER"/>
        <result property="lower" column="LOWER"/>
        <result property="target" column="TARGET"/>
        <result property="challenge" column="CHALLENGE"/>
        <result property="content" column="CONTENT"/>
        <result property="version" column="VERSION"/>
        <result property="iteration" column="ITERATION"/>
        <result property="collectType" column="COLLECT_TYPE"/>
        <result property="computeRule" column="COMPUTE_RULE"/>
        <result property="labId" column="LAB_ID"/>


        <result property="section" column="section"/>
        <result property="label" column="label"/>
        <result property="category" column="category"/>
        <result property="order" column="ORDER"/>

        <result property="createTime" column="CREATE_TIME"/>
        <result property="modifyTime" column="MODIFY_TIME"/>
        <result property="isDeleted" column="IS_DELETE"/>
    </resultMap>

    <resultMap type="com.icss.mvp.entity.index.InTmplLabelEntity" id="inTmplLabel">
        <result property="id" column="ID"/>
        <result property="section" column="section"/>
        <result property="label" column="label"/>
        <result property="category" column="category"/>
        <result property="order" column="category"/>
        <result property="createTime" column="CREATE_TIME"/>
        <result property="modifyTime" column="MODIFY_TIME"/>
        <result property="isDeleted" column="IS_DELETE"/>
    </resultMap>

    <select id="queryInTmplAll" resultMap="inTmplIndex">
        SELECT
            i.*,
            l.ID       AS LAB_ID,
            l.section  AS section,
            l.label    AS label,
            l.category AS category
        FROM in_tmpl_label l, in_tmpl_label_index li, in_tmpl_index i
        WHERE l.IS_DELETE = 0 AND i.IS_DELETE = 0 AND l.ID = li.label_id AND i.ID = li.index_id
    </select>


    <!--<insert id="insertMeasureRangeTeam" parameterType="java.util.List">-->
    <!--REPLACE INTO `team_measure_range` (`measure_id`,`lab_id`,`label`,`category`,`upper`,`challenge`,`target`,`lower`,-->
    <!--`create_time`,`update_time`,`team_id`,`collect_type`,`compute_rule`) VALUES-->
    <!--<foreach collection="indexs" item="ins" index="index" separator=",">-->
    <!--(-->
    <!--#{ins.indexId},#{ins.labId},#{ins.label},#{ins.category},#{ins.upper},#{ins.challenge},#{ins.target},#{ins.lower},-->
    <!--#{ins.createTime},#{ins.updateTime},#{ins.no},#{ins.collectType},#{ins.computeRule}-->
    <!--)-->
    <!--</foreach>-->
    <!--</insert>-->

    <insert id="insertLabel">
		REPLACE INTO in_tmpl_label (CREATE_TIME,MODIFY_TIME,IS_DELETE,section,label,category,`ORDER`)
			select l.CREATE_TIME AS CREATE_TIME,l.MODIFY_TIME AS MODIFY_TIME,l.IS_DELETED AS IS_DELETE,
			l.CATEGORY AS section,l.TITLE AS label,m.CATEGORY as category,l.`ORDER` AS `ORDER`
			from label l,
				(select LABLE_ID,CATEGORY FROM measure WHERE IS_DELETE=0 GROUP BY LABLE_ID,CATEGORY) m
			where  l.ID = m.LABLE_ID and l.IS_DELETE=0;
	</insert>
    <insert id="saveMeasureRangeInfo">
		REPLACE INTO `measure_range` (`measure_id`,`upper`,`challenge`,`target`,`lower`,
		`create_time`,`update_time`,`no`,`collect_type`,`compute_rule`)
		SELECT
		  a.measure_id,
		  a.upper,
		  a.challenge,
		  a.target,
		  a.lower,
		  a.create_time,
		  NOW(),
		  #{no},
		  a.collect_type,
		  a.compute_rule
		  FROM  team_measure_range a where a.team_id = #{teamId}
	</insert>


    <!--获取项目配置指标-->
    <select id="getConfigRecords" resultType="java.util.HashMap" parameterType="Map">
        select
            vl.label,
            vl.category,
            vl.id AS measure_id,
            m.id,
            vl.name,
            vl.unit AS unit,
            IF(m.id IS NULL, vl.`UPPER`, m.`upper`)  AS upper,
            IF(m.id IS NULL, vl.`TARGET`, m.`target`)  AS target,
            IF(m.id IS NULL, vl.`LOWER`, m.`lower`)  AS lower,
            vl.`CHALLENGE` AS challenge,
            IF(m.id IS NULL, vl.`COLLECT_TYPE`, m.`collect_type`) AS collect_type,
            IF(m.id IS NULL, vl.`COMPUTE_RULE`, m.`compute_rule`) AS compute_rule
        from v_label_measure vl left join
        <if test="flag == false">
            (SELECT * FROM (SELECT * FROM `measure_range` WHERE NO = #{proNo} ORDER BY `update_time` DESC)s GROUP BY measure_id) m
        </if>
        <if test="flag == true">
            (SELECT * FROM (SELECT * FROM `team_measure_range` WHERE team_id = #{proNo} ORDER BY `update_time` DESC)s GROUP BY measure_id) m
        </if>
            on vl.ID = m.measure_id
            where 1 = 1
        <if test="'' != label and null != label">
            AND vl.label = #{label}
        </if>
        <if test="'' != category and null != category">
            AND vl.category = #{category}
        </if>
        <if test="null != ids">
            AND vl.ID IN
            <foreach collection="ids" item="item" index="index" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
        order by vl.label,vl.category
    </select>


    <select id="getConfigMeasureIds" resultType="java.lang.String">
        SELECT SUBSTRING_INDEX(SUBSTRING_INDEX(a.measure_ids, ',', b.help_topic_id + 1), ',', -1) AS measure_id
        FROM (
        SELECT measure_ids
        FROM
        <if test="flag == false">
            `measure_configuration_record` WHERE NO = #{proNo}
        </if>
        <if test="flag == true">
            `team_measure_configuration_record` WHERE  team_id = #{proNo}
        </if>
        ORDER BY `update_time` DESC
        LIMIT 1) a
        LEFT JOIN mysql.help_topic b ON <![CDATA[b.help_topic_id < LENGTH(a.measure_ids) - LENGTH(REPLACE(a.measure_ids, ',', '')) + 1 ]]>
    </select>

    <insert id="CopyMeasureRangeByProject">
		REPLACE INTO `measure_range` (`measure_id`,`upper`,`challenge`,`target`,`lower`,
		`create_time`,`update_time`,`no`,`collect_type`,`compute_rule`)
		SELECT
		  a.measure_id,
		  a.upper,
		  a.challenge,
		  a.target,
		  a.lower,
		  a.create_time,
		  NOW(),
		  #{proNo},
		  a.collect_type,
		  a.compute_rule
		  FROM  (SELECT * FROM measure_range WHERE NO = #{oldNo}  ORDER BY `update_time` DESC)a ORDER BY a.measure_id
	</insert>
</mapper>